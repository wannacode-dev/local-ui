#!/usr/bin/env node

const fs = require('fs-extra');
const path = require('path');
const { execSync } = require('child_process');

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  green: '\x1b[32m',
  blue: '\x1b[34m',
  yellow: '\x1b[33m',
  red: '\x1b[31m',
  reset: '\x1b[0m',
  bold: '\x1b[1m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

// URL template —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
const TEMPLATE_REPO = 'https://github.com/wannacode-dev/local-ui.git';

// –§–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∏–∑ template
const FILES_TO_UPDATE = [
  'app/',
  'package.json',
  'next.config.js',
  'tsconfig.json',
  'next-env.d.ts',
  '.gitignore'
];

// –§–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –ù–ï –Ω—É–∂–Ω–æ —Ç—Ä–æ–≥–∞—Ç—å (–∑–∞–¥–∞–Ω–∏—è –∫—É—Ä—Å–∞)
const PRESERVE_FILES = [
  'src/',
  'README.md',
  '.git/',
  'node_modules/'
];

async function updateCourse() {
  log('üöÄ –û–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å –∏–∑ template —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...', 'blue');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  const packageJsonPath = path.join(process.cwd(), 'package.json');
  if (!fs.existsSync(packageJsonPath)) {
    log('‚ùå –§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞.', 'red');
    process.exit(1);
  }

  // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
  const tempDir = path.join(process.cwd(), '.temp-update');
  
  try {
    log('üì° –ö–ª–æ–Ω–∏—Ä—É–µ–º template —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π...', 'blue');
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (fs.existsSync(tempDir)) {
      fs.removeSync(tempDir);
    }
    
    // –ö–ª–æ–Ω–∏—Ä—É–µ–º template
    execSync(`git clone --depth 1 "${TEMPLATE_REPO}" "${tempDir}"`, { 
      stdio: 'pipe' 
    });
    
    log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –∫—É—Ä—Å–∞...', 'blue');
    
    // –°–æ–∑–¥–∞–µ–º backup –ø–∞–ø–∫—É
    const backupDir = path.join(tempDir, 'backup');
    fs.ensureDirSync(backupDir);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è
    for (const preserveFile of PRESERVE_FILES) {
      const srcPath = path.join(process.cwd(), preserveFile);
      const backupPath = path.join(backupDir, preserveFile);
      
      if (fs.existsSync(srcPath)) {
        log(`  üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º ${preserveFile}`, 'yellow');
        fs.copySync(srcPath, backupPath);
      }
    }
    
    log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã...', 'blue');
    
    // –ö–æ–ø–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ template
    for (const fileToUpdate of FILES_TO_UPDATE) {
      const srcPath = path.join(tempDir, fileToUpdate);
      const destPath = path.join(process.cwd(), fileToUpdate);
      
      if (fs.existsSync(srcPath)) {
        log(`  ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º ${fileToUpdate}`, 'green');
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é –µ—Å–ª–∏ —ç—Ç–æ –ø–∞–ø–∫–∞
        if (fileToUpdate.endsWith('/') && fs.existsSync(destPath)) {
          fs.removeSync(destPath);
        }
        
        fs.copySync(srcPath, destPath);
      } else {
        log(`  ‚ö†Ô∏è  –§–∞–π–ª ${fileToUpdate} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ template`, 'yellow');
      }
    }
    
    log('üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –∫—É—Ä—Å–∞...', 'blue');
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    for (const preserveFile of PRESERVE_FILES) {
      const backupPath = path.join(backupDir, preserveFile);
      const destPath = path.join(process.cwd(), preserveFile);
      
      if (fs.existsSync(backupPath)) {
        log(`  ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ${preserveFile}`, 'green');
        fs.copySync(backupPath, destPath);
      }
    }
    
    log('üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...', 'blue');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    execSync('npm install', { stdio: 'inherit' });
    
    log('üéâ –ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!', 'bold');
    log('\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:', 'blue');
    log('  1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É: npm run dev', 'yellow');
    log('  2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è', 'yellow');
    log('  3. –ó–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è:', 'yellow');
    log('     git add .', 'yellow');
    log('     git commit -m "Update platform from template"', 'yellow');
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${error.message}`, 'red');
    process.exit(1);
  } finally {
    // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    if (fs.existsSync(tempDir)) {
      try {
        fs.removeSync(tempDir);
        log('üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã', 'blue');
      } catch (error) {
        log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã', 'yellow');
      }
    }
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å git
try {
  execSync('git --version', { stdio: 'pipe' });
} catch (error) {
  log('‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞.', 'red');
  process.exit(1);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateCourse(); 